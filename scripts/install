#!/usr/bin/env bash

cat << 'EOF'
     __         __       __       __
 __ / /__ _____/ /__  __/ /_  __ / /__  ___
/ // / _ `/ __/  '_/ /_  __/ / // / _ \/ -_)
\___/\_,_/\__/_/\_\   /_/    \___/\___/\__/
EOF

# defaults
PROJECT_SLUG="project-x"
PROJECT_URL="http://${PROJECT_SLUG}.lcl"
WITH_GIT="n"

function _help {
cat <<EOF
  $*
  Usage:          ./install [options]

  Options:
    -h            Show this message
    -s            Set the project slug
                  Valid slugs are lowercase, no whitespace
                  Examples: foo-bar, foo_bar
                  [default: $PROJECT_SLUG]
    -u            Set the project url
                  Should include protocol [default: http://$PROJECT_SLUG.lcl]

  Remote usage:
    bash <( curl -s https://raw.githubusercontent.com/jackjoe/wp-base/master/scripts/install  ) [-s 'project-x']
EOF
exit 0
}

# parse opts
OPTSPEC=":hs:g:"
while getopts "$OPTSPEC" FLAG; do
  case $FLAG in
    s)
      PROJECT_SLUG=$OPTARG
      ;;
    g)
      WITH_GIT="y"
      ;;
    h)
      _help
      ;;
    *) #unrecognized option - show help
      printf \\n"  Option -${BOLD}$OPTARG${OFF} not allowed.\\n"
      _help
      ;;
  esac
done

echo -e "\n--> Checking local dependencies"

# Check composer install
if [[ -z "$(which composer)" ]]
then
	echo -e "\n--> Can't find the composer command."
	echo -e "--> Make sure composer is installed correctly. "
	echo -e "--> https://getcomposer.org/"
	exit 1
else
	echo -e "\n--> Composer installed: OK"
	echo -e "    $(which composer)"
fi

# Ask & set project slug
echo -e "\n--> We'll be using following settings:"
echo -e "slug:      ${PROJECT_SLUG}"
echo -e "url:       ${PROJECT_URL}"

# Create project folder and change into it
echo -e "\n--> Create project folder ${PROJECT_SLUG}"
mkdir -p "./${PROJECT_SLUG}"

echo -e "--> Change directory to ${PROJECT_SLUG}"
cd ./${PROJECT_SLUG}
pwd

TEST=0

# Load template files
if [[ "$PWD" =~ "wp-base" ]]
then
	mkdir -p ./wp-base-master
	cp -Ri ../templates ./wp-base-master/templates
else
	echo -e "--> Downloading wp-starter files\n"
	curl -L https://github.com/jackjoe/wp-base/archive/master.zip > wp-base-master.zip

	echo -e "--> Extract files\n"
	unzip wp-base-master.zip
	rm wp-base-master.zip
fi

echo -e "--> Copy template files"
cp -Ri ./wp-base-master/templates/* ./
cp -Ri ./wp-base-master/templates/.[^.]* ./

# Replace variables in the templates files
echo -e "--> Update README with project details"
sed -i '' -e "s:{{PROJECT_SLUG}}:${PROJECT_SLUG}:g" ./README.md
sed -i '' -e "s:{{PROJECT_URL}}:${PROJECT_URL}:g" ./README.md

echo -e "--> Configure variables in wp-config.php"
sed -i '' -e "s:{{PROJECT_SLUG}}:${PROJECT_SLUG}:g" wp-config.php
sed -i '' -e "s:{{PROJECT_URL}}:${PROJECT_URL}:g" wp-config.php

echo -e "--> Configure Makefile"
sed -i '' -e "s:{{PROJECT_SLUG}}:${PROJECT_SLUG}:g" Makefile

echo -e "--> Add salt keys files to wp-config.php\n"
curl -s https://api.wordpress.org/secret-key/1.1/salt/ > wp-base-master/wp_salt_keys

sed -i -e "/{{WP_SALT_KEYS}}/{
	s/{{WP_SALT_KEYS}}//g
	r ./wp-base-master/wp_salt_keys
}" wp-config.php

echo -e "--> Configure variables in style.css"
sed -i '' -e "s:{{PROJECT_SLUG}}:${PROJECT_SLUG}:g" ./wp-content/themes/PROJECT_SLUG/style.css

echo -e "--> Rename theme folder to ${PROJECT_SLUG}"
mv ./wp-content/themes/PROJECT_SLUG ./wp-content/themes/${PROJECT_SLUG}

# Copy default env file
cp .env.example .env

# Clean up
echo -e "--> Clean up install files"
rm -r ./wp-base-master

# Composer
echo -e "--> Run composer"
composer install

# Yarn
if [[ -z "$(which composer)" ]]
then
	echo -e "\n--> Can't find yarn."
else
  echo -e "--> Run yarn"
  yarn
fi

# Initialize Git
if [[ "${WITH_GIT}" == "y" ]]
then
	git init
	git add .
	git commit -m "Bootstrapped application with wp-base"
fi

# The end
echo -e "\n**************************************************"
echo -e "\n--> That's it! Happy developing :)"
echo -e "\n Project folder: ${PROJECT_SLUG}"
echo -e "Project url: ${PROJECT_URL}"
echo -e "\n--> Things to configure manually:\n"
echo -e "1. Create an entry in your hosts file and setup a vhost on apache"
echo -e "2. Create S3 bucket and add keys to production app via admin panel:"
echo -e "  ${PROJECT_URL}/wp/wp-admin/options-general.php?page=wpro"
echo -e "3. Create development database:"
echo -e "   ${PROJECT_SLUG}-dev"
echo -e "4. Add admin credentials to 1Password"
echo -e "5. Add plugin: Advanced Custom Fields Pro"
echo -e "7. run `make sasswatch` when styling"
echo -e "\n**************************************************"
